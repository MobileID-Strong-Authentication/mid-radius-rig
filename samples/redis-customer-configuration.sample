##############################################################################################################################
# Customer Configuration for REDIS (JSON)                                                                                    # 
##############################################################################################################################

********************************************************************************************
DESCRIPTION
********************************************************************************************

Below is a sample customer configuration for REDIS.
You may configure one or even multiple customers.

Q: How is an incoming "Access-Request" packet mapped to the correct customer JSON configuration?
A: The RIG application looks for a match between the incoming "Access-Request" packet's source IP address and any existing "SourceIps"-entries in the customer configuration.
   If none of the "SourceIps" match, it keeps trying to find a match between the inbound Access-Request "NAS-Identifier"-attribute and a matching "NasIdentifier"-entry in the customer configuration.
   Therefore, please make sure the customer configuration has unique "SourceIps"-entries or that is has a unqiue "NasIdentifier"-entry. A "NasIdentifier"-entry is not required if a "SourceIps"-entries exist.
   Moreover, please make sure each customer entry has its own and unique "ApId"-entry. Each customer should have its own MobileID Account (AP_ID value), so that you will get a separate MobileID usage and billing report for each customer. 

Additional remarks for some of the JSON elements in the example below:

- "UnusedMidServiceEvent"-configuration
    # Customer Text SMS Notification for inactive MobileID Users (OPTIONAL)
    # Text SMS is sent after detecting a user access-request with an inactive MobileID SIM or MobileID App, with a configurable delay -> ExecutionDelayMinutes
    # Text SMS is sent to this user only once every x days -> NotificationIntervalDays
    # AppSmsText: User didn't have an active MobileID SIM nor active MobileID App and the SIM is NOT MobileID compliant! -> Inform the user about MobileID App activation
    # SimSmsText: User didn't have an active MobileID SIM nor active MobileID App and the SIM IS MobileID compliant!     -> Inform the user about MobileID SIM activation

- "ErrorNotificationEvent"-configuration
    # Customer Text SMS Notification in case of an Access-Reject (OPTIONAL)
    # For example a value for ErrorCode may be "Mid_401", "MidGeo_100", "RigSerialNumberMismatch", etc.
    # Text SMS is sent after detecting a user access-request with an inactive MobileID SIM or MobileID App, with a configurable delay -> ExecutionDelayMinutes
    # Text SMS is sent to this user only once every x days -> NotificationIntervalDays

    Supported "ErrorCode" values for the "ErrorNotificationEvent" configuration:
      Mid_{code}     -> Replace {code} with any 3-digit MobileID API error code as specified in the MobileID Client Reference Guide, for example: "Mid_401" (The MobileID authentication was cancelled by the user)
      MidGeo_{code}  -> Replace {code} with any 3-digit MobileID Geofencing error code as specified in the MobileID Client Reference Guide, for example: "MidGeo_100" (MobileID App Geofencing toggle was not enabled)
      MidInvalidSerialNumber
      LdapInvalidCredentials
      LdapUserNotFound
      LdapMissingMsisdnAttribute
      LdapMissingSerialNrAttribute
      LdapInvalidMsisdn
      LdapInvalidSerialNumber
      LdapMissingPassword
      RigMissingCustomerConfiguration
      RigOtpMaxAllowedLoginAttemptsExeeded
      RigOtpNotStored
      RigOtpMismatch
      RigMfaMehtodNotSupported
      RigNoMfaMethodFound
      RigLocationValidationFailed
      RigLocationDeviceConfidenceTooLow
      RigLocationLocationConfidenceTooLow
      RigOtpInvalidMsisdn
      RigInvalidMsisdn
      RigSerialNumberMismatch
      RigInvalidSerialNumber
      RigInvalidCustomerConfig

Supported languages: "De" (German), "Fr" (French), "It" (Italian), "En" (English)

Please add the JSON example content to REDIS:
- As REDIS "Key" you should enter "CUSTOMER_CONFIG_<any-unique-customer-identifier-such-as-ApId>" and replace the "<...>" accordingly.
- As REDIS "VALUE" of type "String" you should enter the JSON content below.

********************************************************************************************
JSON Example Content
********************************************************************************************

{
  "Customer": "My Company XYZ",
  "ApId": "mid://ap.mycompany.ch",
  "NasIdentifier": "ch_mycompany",
  "SourceIps": [
    "10.1.1.22/32"
  ], 
  "RadiusSharedSecret": "MyVeryStrongSharedSecret",
  "UseLdap": true,
  "Ldap": {
    "Hosts" : { 
      "Primary" : "10.0.0.5",
      "Secondary" : "",
      "Tertiary" : ""
    },
    "Port" : 389,
    "ConnectionTimeoutSeconds" : 20,
    "EnableSsl": false,
    "AdminUser": "cn=admin,dc=mycompany,dc=ch",
    "AdminPassword": "MyAdminPassword",
    "UserSearchBase": "ou=users,dc=mycompany,dc=ch",
    "UserSearchFilter": "(&(objectclass=inetOrgPerson)(uid={0}))",
    "ValidateUserPassword": true,
    "MobileNrAttribute": "mobile",
    "LanguageAttribute": "preferredLanguage",
    "SerialNrAttribute": "msNPCallingStationID",
    "MfaMethod": {
      "AttributeName": "mfaType",
      "Mappings": {
        "Sim": "Sim",
        "App": "App",
        "Otp": "Otp"
      }
    }
  },
  "Geofencing": {
    "Activate": true,
    "Whitelist": [
      "CH",
      "DE"
    ],
    "Blacklist": [
      "US"
    ],
    "MinimalDeviceConfidence": 0.7,
    "MinimalLocationConfidence": 0.7
  },
  "DefaultLanguage": "en",
  "ValidateSerialNr": false,
  "UseUserLanguage": false,
  "UseUserMfaMethod": true,
  "MfaMethods": [
    "SIM",
    "APP",
    "OTP"
  ],
  "Otp": {
    "Length": 5,
    "Mode": "Text",
    "SmsText": {
      "Default": "Ihr MobileID Code ist {0}",
      "De": "Ihr MobileID Code ist {0}",
      "Fr": "Votre MobileID Code est {0}",
      "It": "Il MobileID Code è {0}",
      "En": "Your MobileID Code is {0}"
    },
    "ReplyMessageText": {
      "Default": "Geben Sie den Code ein, den Sie per SMS erhalten haben",
      "De": "Geben Sie den Code ein, den Sie per SMS erhalten haben",
      "Fr": "Saisissez le code que vous avez reçu par SMS",
      "It": "Inserisci il codice che hai ricevuto via SMS}",
      "En": "Enter the code you have received by SMS"
    }
  },
  "SimApp": {
    "DisplayText": { 
      "Default": "<YourMobileID-Prefix>: Bitte mit Mobile ID authentifizieren", 
      "De": "<YourMobileID-Prefix>: Bitte mit Mobile ID authentifizieren", 
      "Fr": "<YourMobileID-Prefix>: Veuillez vous authentifier avec votre ID mobile", 
      "It": "<YourMobileID-Prefix>: Si prega di autenticarsi con il Mobile ID", 
      "En": "<YourMobileID-Prefix>: Please authenticate with Mobile ID" 
    } 
  },
  "Events": {
    "UnusedMidServiceEvent": {
      "ExecutionDelayMinutes": 3,
      "NotificationIntervalDays": 7,
      "AppSmsText": {
        "Default": "Please visit https://mobileid.ch/activate and activate the MobileID App",
        "De": "Please visit https://mobileid.ch/activate and activate the MobileID App (de)",
        "Fr": "Please visit https://mobileid.ch/activate and activate the MobileID App (fr)",
        "It": "Please visit https://mobileid.ch/activate and activate the MobileID App (it)",
        "En": "Please visit https://mobileid.ch/activate and activate the MobileID App (en)"
      },
      "SimSmsText": {
        "Default": "Please visit https://mobileid.ch/activate and activate your MobileID SIM card",
        "De": "Please visit https://mobileid.ch/activate and activate your MobileID SIM card (de)",
        "Fr": "Please visit https://mobileid.ch/activate and activate your MobileID SIM card (fr)",
        "It": "Please visit https://mobileid.ch/activate and activate your MobileID SIM card (it)",
        "En": "Please visit https://mobileid.ch/activate and activate your MobileID SIM card (en)"
      }
    },
    "ErrorNotificationEvent": {
      "ExecutionDelayMinutes": 0,
      "HandledErrorCodes": [
        {
          "ErrorCode": "RigSerialNumberMismatch",
          "NotificationIntervalDays": 1,
          "SmsText": {
            "Default": "Your MobileID Token has changed. Please re-register your MobileID at https://xyz.com/register before you try to access xyz.com.",
            "De": "Your MobileID Token has changed. Please re-register your MobileID at https://xyz.com/register before you try to access xyz.com. (de)",
            "Fr": "Your MobileID Token has changed. Please re-register your MobileID at https://xyz.com/register before you try to access xyz.com. (fr)",
            "It": "Your MobileID Token has changed. Please re-register your MobileID at https://xyz.com/register before you try to access xyz.com. (it)",
            "En": "Your MobileID Token has changed. Please re-register your MobileID at https://xyz.com/register before you try to access xyz.com. (en)"
          }
        },
        {
          "ErrorCode": "MidGeo_100",
          "NotificationIntervalDays": 1,
          "SmsText": {
            "Default": "Hi! Please make sure to enable the Geofencing Toggle in your MobileID App",
            "De": "Hi! Please make sure to enable the Geofencing Toggle in your MobileID App (de)",
            "Fr": "Hi! Please make sure to enable the Geofencing Toggle in your MobileID App (fr)",
            "It": "Hi! Please make sure to enable the Geofencing Toggle in your MobileID App (it)",
            "En": "Hi! Please make sure to enable the Geofencing Toggle in your MobileID App (en)"
          }
        }
      ]
    }
  },
  "FortigateBehaviour":{
    "VendorSpecificAttributeTriggerValue":"root",
    "UserGroupSearchFilter":"(&(objectClass=groupOfNames)({0}))",
    "FortinetLdapUserGroupMap":[
       {
          "ForitnetGroupName":"gu-rad_msrl_sslvpn1",
          "LdapGroupDn":"ldap-group-dn-admin"
       },
       {
          "ForitnetGroupName":"gu-rad_msrl_sslvpn2",
          "LdapGroupDn":"ldap-group-dn-user"
       }
    ],
    "FortinetAccessProfile":"none",
    "DefaultFortinetGroupName":"no-group-found",
    "FailAuthIfGroupUnknown":false
   }
}

********************************************************************************************
OPTIONAL: FortigateBehaviour
********************************************************************************************

... 
"FortigateBehaviour": {
  "VendorSpecificAttributeTriggerValue": "root",
  "UserGroupSearchFilter": "(&(objectClass=groupOfNames)({0}))",
  "FortinetLdapUserGroupMap": [
    {
      "ForitnetGroupName": "gu-rad_msrl_sslvpn1",
      "LdapGroupDn": "ldap-group-dn-admin"
    },
    {
      "ForitnetGroupName": "gu-rad_msrl_sslvpn2",
      "LdapGroupDn": "ldap-group-dn-user"
    }
  ],
  "FortinetAccessProfile": "none",
  "DefaultFortinetGroupName": "no-group-found",
  "FailAuthIfGroupUnknown": false
}
...

The FortigateBehaviour's JSON section in the above example is OPTIONAL.
- Enabling/disabling the feature: The described behaviour is implicitly activated if the attribute "Fortinet-Vdom-Name = root" (via Vendor-Specific Attributes) is set in the Access-Request Packet
- Procedure with activated Fortigate behaviour:
  - After reading out the user from LDAP, additionally read out all user groups by means of "UserGroupSearchFilter" (Config)
  - Match the user groups against "FortinetLdapUserGroupMap" (Config) and read out the mapped Fortigate group. The FIRST matching group is taken!
  - The following cases are then distinguished in the radius response:
    - Fortigate group found: Enrich Access-Accept with the following (Vendor-Specific) attributes:
      => Fortinet-Vdom-Name = "root" (taken from Access-Request)
      => Fortinet-Group-Name = {{ matching Fortigate group }}
      => Fortinet-Access-Profile = {{ "FortinetAccessProfile" (Config) }} 
    - Fortigate group not found:
      -> If "FailAuthIfGroupUnknown = true": Access-Reject with corresponding error
      -> If "FailAuthIfGroupUnknown = false": Enrich Access-Accept with the following attributes:
         => Fortinet-Vdom-Name = "root" (taken from Access-Request)
         => Fortinet-Group-Name = {{ "DefaultFortinetGroupName" (Config) }}"
         => Fortinet Access Profile = {{ "FortinetAccessProfile" (Config) }}" 

Additional Infos:
- https://www.rfc-editor.org/rfc/rfc2865#section-5.26
- Possible query to get all user groups: (&(objectCategory=group){0})
- https://www.fortinetguru.com/2016/06/authentication-servers/4/
