##############################################################################################################################
# ENV Sample - For a CLUSTERED RIG setup, using a Redis database                                                             # 
##############################################################################################################################

# ********************************************************************************************
# DESCRIPTION
# ********************************************************************************************
# Please Note... 
#  - This is a sample configuration to run a clustered RIG setup with a Redis database, which ideal for PRODUCTION use
#  - A Redis database may be run as separate cluster application (Docker image `rediscommander/redis-commander`)
#  - I18N Error Message Configuration must be defined in Redis using `I18N_MESSAGES`-key and JSON content as value. Refer to the `redis-i18n-errormsg-configuration.sample` file.
#  - Customer Configuration must be defined in Redis as `CUSTOMER_CONFIG_<ApId>`-key and JSON content as value. Refer to the `redis-customer-configuration.sample` file.

# ********************************************************************************************
# Application Configuration
# ********************************************************************************************

ASPNETCORE_ENVIRONMENT=Production

# Your Base64 encoded MobileID Client Key (PFX/P12, PKCS#12, without password)
# To get the Base64 value you may run this unix command:
# $ base64 -w 0 <MyKey.pfx>
MID_CLIENT_CERTIFICATE=MIIJW***

# Serilog Log Configuration
# Valid Serilog Level: Verbose -> Debug -> Information -> Warning -> Error -> Fatal
Serilog__MinimumLevel__Default=Verbose
Serilog__MinimumLevel__Override__Microsoft=Warning
## Detail Levels / Please note that a "dot" in an ENV file is not always supported by Docker runtime
Serilog__MinimumLevel__Override__Microsoft.Hosting.Lifetime=Warning
Serilog__MinimumLevel__Override__Microsoft.Extensions.Diagnostics.HealthChecks=Error
Serilog__MinimumLevel__Override__Flexinets.Radius.RadiusServer=Verbose
Serilog__MinimumLevel__Override__Flexinets.Radius.Core=Verbose
Serilog__WriteTo__0__Args__outputTemplate={Timestamp:yyyy-MM-dd HH:mm:ss.fff} {Level:u4} [{CorrelationId}] {SourceContext} - {Message:lj}{NewLine}{Exception}

# WebServer Port which you may use for Container TCP Health Checks
WebServer__Port=80

# Radius Server Configuration
RadiusServer__Port=1812
RadiusServer__OtpValiditySeconds=120
RadiusServer__OtpMaxAllowedLoginAttempts=3

# Customer Configuration Source
# Value can either be 'KeyValueStorage' or 'AppSettings'
RadiusServer__CustomerConfigSource=KeyValueStorage

# I18N Error Message Configuration Source
# Value can either be 'KeyValueStorage' or 'AppSettings'
RadiusServer__I18nMessagesSource=KeyValueStorage

# Value can either be 'Redis' or 'InMemory'
Schnittstellen__KeyValueStorage__Storage=Redis
Schnittstellen__KeyValueStorage__Host=<redis-url>:6379

## MobileID Client
Schnittstellen__MobileIdClient__Host=https://mobileid.swisscom.com
Schnittstellen__MobileIdClient__ClientCertFromEnv=true
Schnittstellen__MobileIdClient__SignatureTrust__ValidateCertTrust=true
Schnittstellen__MobileIdClient__SignatureTrust__ValidateSignature=true
Schnittstellen__MobileIdClient__SignatureTrust__ValidateSignaturePayload=true
Schnittstellen__MobileIdClient__ServerTrust__ValidateCertTrust=true
Schnittstellen__MobileIdClient__TransactionTimeoutSeconds=60

RadiusServer__DuplicatePacketHandlingExpirationSeconds=120

# TrustStore Configuration - These values usually don't need to be changed
# To get a correct value for the TrustStore_
# 1) You must have the ROOT CA certificate in PEM format (which is a text file that starts with "-----BEGIN CERTIFICATE-----")
# 2) Get the BASE64 encoded value, for example: $ base64 -w 0 Swisscom_Root_CA_4.cer

# Swisscom Root CA 4 Certificate (Root Cert for Mobile ID User Cert)
Schnittstellen__MobileIdClient__SignatureTrust__TrustStore__0=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUtWVENDQmdtZ0F3SUJBZ0lRRko0NmVGK0M4V3VLK3lHcTFhLzNSekJCQmdrcWhraUc5dzBCQVFvd05LQVAKTUEwR0NXQ0dTQUZsQXdRQ0FRVUFvUnd3R2dZSktvWklodmNOQVFFSU1BMEdDV0NHU0FGbEF3UUNBUVVBb2dNQwpBU0F3Z1lReEd6QVpCZ05WQkFNTUVsTjNhWE56WTI5dElGSnZiM1FnUTBFZ05ERWxNQ01HQTFVRUN3d2NSR2xuCmFYUmhiQ0JEWlhKMGFXWnBZMkYwWlNCVFpYSjJhV05sY3pFZU1Cd0dBMVVFWVF3VlZrRlVRMGd0UTBoRkxURXcKTVM0Mk5UUXVOREl6TVJFd0R3WURWUVFLREFoVGQybHpjMk52YlRFTE1Ba0dBMVVFQmhNQ1EwZ3dIaGNOTVRneApNVEk1TVRBeU1UVXpXaGNOTXpneE1USTBNVEF5TVRVeldqQ0JoREViTUJrR0ExVUVBd3dTVTNkcGMzTmpiMjBnClVtOXZkQ0JEUVNBME1TVXdJd1lEVlFRTERCeEVhV2RwZEdGc0lFTmxjblJwWm1sallYUmxJRk5sY25acFkyVnoKTVI0d0hBWURWUVJoREJWV1FWUkRTQzFEU0VVdE1UQXhMalkxTkM0ME1qTXhFVEFQQmdOVkJBb01DRk4zYVhOegpZMjl0TVFzd0NRWURWUVFHRXdKRFNEQ0NCQ0l3RFFZSktvWklodmNOQVFFQkJRQURnZ1FQQURDQ0JBb0NnZ1FCCkFNWVNVNW4wYTNoeEpUVjJVYkFsMHl4UU5DRmJaYkV4ZFRubzNWc0FTeHhialFLUEY5SXo4SHNQQWRQeUM3YmIKWW1wVms3V3VhS0Q1bXlKYVZQcE40YkVuRm9zRkVmQUdXRGRONUQ2U2I5Y2tuN0V1blFXem5KK0ZmTWI2a1VNKwpqSkw5blV4WUJDSmV4eGVUcTRYbUFLUDN6aXEreVAvaThKdnhMNXZRUGkya2JmdmE1YzIwSjlRNzJ4VlZlWC9wCkFtUm4wSlFaMmN1dWx6eitNL2N3VXYycDhZc09ZajFINjJ3SVRpQ3NPVGhJNFJsSVFYaGVRT2NhTTRYQmt0YjgKYjBTSk9wSGhiT2ZDV1A5Z2hncFhiR2ZDL0NPS0FlZ1F2d3pKcUd1eXJYWFFlNmswVEdFTEx6d0xmNjVTNXBpSApmckV3T0pTMzJJZTgxVENjN0JrV3IzKzh4REJVQkZQeTdtV3dPcUk5dFV1dG02WGlIckZsSGs1eUhwcEJpWUF3Ckh3RnJ0Q3QvZTdVcFAvdy84dWdzZkt4VDhXYlA1REhBOXUxOEVwQUZCQ0ZoOGgrNWxsWGJGd1BaNSt6TE1WNXEKeWcyUndxaVNlQW80czhSVFVGKy8rdXJ3K1AyL21ydzRkcWZlV28rZ3dyUlB1R0ZhaitJMkgrbFFhV0hGUnJ3NgpYZ3Fkak5wOEJUbzhxaTVud0pDSW1UbFRidXJlcldDY2o5Z0xkdWYvKzZsUkJpQXErUS9RSWJHMEVSZFVxK0xDCkFrUlYvNlZXZXprOVJGUW1NK2pVMlZoVm5NZGE5eisrZU5wakdnTldFZUc2bGVZQlZyMEpudTZEazZRenhZMmoKM2pIVWl2NDZTMmxmM1BmN21ZcnlWNmxkdkdOZGRtWjh1UkJVSjN0dXhPQmRkZ1FnVitBOHdKY3FFdWRrV0NXTQpjMXU0VUx0V1hVTisrRGFrQjYzK1RNVVBSWEJNeFc0dytkZEEzZXNTN3psZ2RjQW9WaWh3V1UrTkd1RndiY0FVCnJpemc3N0ZINm1idGVzVVcyelBieEs3aVV3bGVzOC80TXZqWDk0bHEwLzNvd0wxQWlSN2dXL3ZoV2F6SURiVTAKNmdmTU14TUtobzZzQVk2KzBpbXJyV0hFc2UyWUZtUUhkcjJPcVZ6WGhsOEJMK2pDL21OVWR1cU5MY3dQL0NkegpocWExNTU1SmxiRXhOVU5nblFKOEZIRk16R1BBS3pGQW9QbVUwK0RqL2JJSFlNdUNUTW1XNThHdVhQaFNKZnVyCi9DWmVDaERIS0Q1MjlIRVA0NzJsL3JHWWFzSGF6bDZQOFNpNWxaaSs3cGlVKytWd2UzdGc1WUt1TTJDUWdOWFgKSFllTmtqYVJDSVE2RGtaaG9pN1FkNm5FbUx2YmxrdDRmOWQ5MVFqKzFYankwY0p2Q3g1YVBFT3NuUkRXNThCVApqcGRnYW45VFNFa0xaTnNrN2xkNk1GTnVtNGlmQkJFUEVaOThRUm9YWkc1bjM2NzZNRG9hRXA5YW91V1gyeTI0Clo2TmtnZEg3T1p2bWdSelBTVUVXWE94WlBEeHltZVBWRThBdmttL05pNkpreHNDb1JWZE5xTU5PTzhIWVNtN2QKY24xS0t0V053VzQ0akdaV3g2UFpvSjVlL0U2RVNIZEw0UkJkb0tZdmRua21IdlA5QVVpdHBMeENSQUdHRUk1RQpoeE9HOW1JTFdqU0V3cDBMS2NoRXlGMTZuZHRvVWUxc3VaVDRTdzV5R3dQalcxNTlwb3JvU295L1dEVW13Y2ppCkV4dWVPVTVOQW43am9sUUxzNURJSmtFQ0F3RUFBYU5aTUZjd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBVkJnTlYKSFNBRURqQU1NQW9HQ0dDRmRBRlRIZ1FBTUIwR0ExVWREZ1FXQkJSVVdtY2ZhelQ1bmxsQW9sOUJlajdCQ01ZVgpFekFPQmdOVkhROEJBZjhFQkFNQ0FRWXdRUVlKS29aSWh2Y05BUUVLTURTZ0R6QU5CZ2xnaGtnQlpRTUVBZ0VGCkFLRWNNQm9HQ1NxR1NJYjNEUUVCQ0RBTkJnbGdoa2dCWlFNRUFnRUZBS0lEQWdFZ0E0SUVBUUFJWmxFdEFxS3EKUGRKR3o0WndiNWhDQnczRTlma0pGTUduTmtaN2piMGFrdXdzb2VNU2xmbloxSlViZkhHU1NIRnJ1YWRKRnFtNQpJcWVVU1B0dlNEa0lvM3dwRjJPTFA1bHZCQTJVU3VwRkxiY0dLK3d4REZYY1R6ZG1xZ2oxUzNzc1FFTDZlVGdiCllxUGVXREFOOW0xa2t6QmdESWs3Y09HSnlPTXI4MDVaSVovR2dSZHV3NzJJY1dCNTdBdUVZeVBRb0VTN3VsWWIKRkU0TWdreE56b2Q5SjQyODFqRGw2V0pCMkM2N0JFaURsbkJoUXp5Qll4NnVGS2NmV21Fakd4dnRUbFhJR3FZTAp0dTlZV0lDek5PVWVCM28yMzhRUUZzbVNOUkpYTUFMTUJHYWs0UjcrMHY5citvWlNqUWV4eDJRRVhVTWxZVWp5ClIvMDJEYVBaQy9jZnpFNUhUdlFyNjAxZjZ4T3BUUE13MVhORnhNeWRzMUtrbUlPaWVsWERHdE5yNHVmS1BYNUMKdXVCV1hPMVcyRVN6Uy9ibDBOUCtFMWt1Z3o2QjVLc085Y0Q0TDVYdVliVFA5UEovTU8rZnJORVc1VWE0SEhWSwp4cE92cFUxaDZEYWN5a3pWdzk1ZC9LWkR1ZFprdStENVBXSTAxaTdEZ0JVb1BwcE0yUHQweHRkbVF4NGhWTnJJCkRlVzVqaEN2SWM5WlNmelh3cElVRmxUOU1xeTRjUmp1RUd4YTdnWVRaN0t0d3k3QzVVcFp1KzVFeEFZa2NXbVcKUTFmR0xjdFBDNFdoNWRoYW4rNlV2amZZQ3cwSWFMdWtYbzhoM1l1Y0xwQXI3WFUzZkZoYzAxU0JOeHJ0QXdXSgoxaUxadkp2QWxUM2dnWmZkUUJ6ZU9tR3FGV2pMbU1waXJzNUtVd3FLTVVhd0VaakhQTTlMWHN1UWNObzZBYlpICjZTKzRjSkVRRWJWdU1yZmJGMlgvMFp1NUI4ZnFxK1BXeXhKM1hnZFI2dzlUWXRnZzJMZVVVK0Ivd2JDSDJsbzEKNWQySXd4eVNBTC9oQVNSby9zUDdjL1V1RThVdk1pV2wxR1JSSlBnYmp0aWtrcnVCUVhDUk1CQkxxMlRzNmRYVAorTGl6RmR5QWJucE91aUVLNmhIOUpEcEpHVitEYVp5UWl3Q09jTk9jUFI4L2NSOTZlZUJEVThteDg3MC8vWkp1Cm5Sb0dCbTI0bVllVjBUTFF1S2JFRXBhTms1VGMwejNDaTllSHNUZ3JvbmN1STEwcDY3MWFRSUJYWWRUOS9RekUKc0RUc2RORng0bTNnRGFyWVJDQmpnRjQ4MVZqMG8ycXZZa2R1KzFHcEc3Y2ZLY1BMSlJGYitKLzZnMlNEOSt5bwpTUG5PdXVUaVUxbDF0QzIyRzF4Vi9kczhxeW1qUitCblkzd21GRGFDTWYwRGRHMW1ra1VFekcrTUhVSG1hSWQwCjBiZWpuWitHRWRGWDNzUy9XcnhSQ0NXSStmNWg5U0xZbnRvYmV2VUhLcVk2WWs5Myt4YTNDUFlNUkdGN1FNOUIKZlZ4SFlzZ3ZyOGlzWWNzUHdqeWxadW16TVcyeXhHSUsrWnk0SzVxVHo3Ry9sTGsvb1JBdmYvM2UyU1ltWTZRcApIZVM4NnBjNzhqQjArNmJSaG5UOEJXdFo5cjJzQUlPUmdMekVaK1UxbzZZWk9YclVlYUlqSytlU21nZTRCVGJrCjJtZlFHUHZROS9YaEhPSUFOTjEzUy9neVVSQ1BvS21qUEgzSUI1NEZTZEZ5SXA4ZlQ2SlF4M0w4bCs2aVg4T24KZE1GTE1nanIvREpPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

# Swisscom Root CA 2 Certificate (Root Cert for Mobile ID User Cert)
Schnittstellen__MobileIdClient__SignatureTrust__TrustStore__1=QmFnIEF0dHJpYnV0ZXMKc3ViamVjdD0gL0M9Y2gvTz1Td2lzc2NvbS9PVT1EaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzL0NOPVN3aXNzY29tIFJvb3QgQ0EgMgppc3N1ZXI9IC9DPWNoL089U3dpc3Njb20vT1U9RGlnaXRhbCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlcy9DTj1Td2lzc2NvbSBSb290IENBIDIKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYyVENDQThHZ0F3SUJBZ0lRSHA0bzZFank1ZS9EZkVvZVdoaG50akFOQmdrcWhraUc5dzBCQVFzRkFEQmsKTVFzd0NRWURWUVFHRXdKamFERVJNQThHQTFVRUNoTUlVM2RwYzNOamIyMHhKVEFqQmdOVkJBc1RIRVJwWjJsMApZV3dnUTJWeWRHbG1hV05oZEdVZ1UyVnlkbWxqWlhNeEd6QVpCZ05WQkFNVEVsTjNhWE56WTI5dElGSnZiM1FnClEwRWdNakFlRncweE1UQTJNalF3T0RNNE1UUmFGdzB6TVRBMk1qVXdOek00TVRSYU1HUXhDekFKQmdOVkJBWVQKQW1Ob01SRXdEd1lEVlFRS0V3aFRkMmx6YzJOdmJURWxNQ01HQTFVRUN4TWNSR2xuYVhSaGJDQkRaWEowYVdacApZMkYwWlNCVFpYSjJhV05sY3pFYk1Ca0dBMVVFQXhNU1UzZHBjM05qYjIwZ1VtOXZkQ0JEUVNBeU1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQWxVSk9oSjFSNXRNSjZISmFJMm5iZUhDT0Z2RXIKancwRHpwUE1MZ0FJZTZzempQVHBRT1lYVEt1ZXVFY1VNbmN5M1NnTTNoaExYM2FmK0RrNy9FNkoySHpGWisrcgowcmswWDJzNjgyUTJ6c0t3enhOb3lzakw2N1hpUFM0aDMrb3MxT0Q1Y0paTS8ycFltTGNYNUJ0UzVYNEhBQjFmCjJ1WStsUVMzYVlnNW9VRmdKV0ZMbFRsb1loeXhDd1dKd0RhQ0ZDRS9ydHVoL2J4dkhHQ0d0bE9VU2JrclJzVlAKQUN1L29idkxQK0RIVnh4WDZOWnArTUVrVXAySVZkM0NoeTUwSTlBVS9TcEhXcnVtbmYyVTVOR0twVitHWTNhRgp5Ni8vU1NqOGdPMU1lZEs3NU1EdkFlNVFRUWcxSTNBcnFSYTBqRzZGNmJZUnp6SGRVeVliM3kxYVNnSkEvTVRBCnR1a3hHZ2dvNVdEREg4U1FqaEJpWUVRTjdBcStWUmh4TEtYMHNyd1ZZdjhjNDc0ZDJoNVhzengrellJZGtlTkwKNnl4U05MQ0svUkpPbHJEcmNIK2VPZmRtUXJHcnJGTGFka0JYZXlxOTZHNERzZ3VBaFlpZERNZkNkN0NhbWxmMAp1UG9UWEdpVE9tZWtsOUFibWJlR01rdGcyTTd2MEF4L2xaOXZoMCtIaW81ZkNIeXFXL3hhdnFHUm4xVjlUckFMCmFjeXdsS2luaC9MVFNsRGNYM0t3Rm5VZXk3UVlZcHF3cHptcW01OW0ySTJtYkpZVjQrYnkrUEdEWW15N1ZlbGgKazZNOTliRlhpMDhqc0p2bGxHb3YzNHpmbFZFcFlLRUxLZVJjVlZpM3FQeVo3aVZOVEE2ejAweVBoT2dwRC8wUQpWQUtGeVBubHc0dlA1dzhDQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNBWVl3SFFZRFZSMGhCQll3CkZEQVNCZ2RnaFhRQlV3SUJCZ2RnaFhRQlV3SUJNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUWN3SFFZRFZSME8KQkJZRUZFMG1JQ0tKUzlQVnBBcWhiOTdpRW9IRjhUd3VNQjhHQTFVZEl3UVlNQmFBRkUwbUlDS0pTOVBWcEFxaApiOTdpRW9IRjhUd3VNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUF5Q3JLa0c4dDl2b0pYaWJscWYvUDB3UzRSCmZiZ1pQbm0zcUtoeU4yYWJHdTJzRXpzT3YyTHduTitlZTZGVFNBNUJlc29ncHhjYnRuanNRSkh6UXEwUXcxenYKLzJCWmY4MkZvNHM5U0J3bEFqeG5mZlV5NlM4dzVYMmxlampRODJZcVpoNk5NNE9LYjN4dXFGcDFtcmpYMmxoSQpSRWVvVFBwTVNRcEt3aEkzcUVBTXc4amgwRmNObHpLVnh6cWZsOU5YK0F2ZTVYTHpvOXYvdGRoWnNuUGRUU3B4CnNycEo5Y3NjMWZWNXlKbXovTUZNZE9PMHZTazNGUVFvSHQ1RlJuRHNyN3A0RG9vcXpnQjUzTUJmR1djc2EwdnYKYUdnTFErT3N3V0lKNzZiZFpXR2dyNFJWU0pGU0hNWWxrU3JRd1NJallWbXZSUkdGSFFFa05JL1BzLzhYY2lBVAp3b0NxSVN4eE9RN1FqMXpCMDlHT0luSkdUQjJXcms5eHNlRUZLWlpaOUx1ZWRUM1BEVGNOWXRzbWpHT3BJOTluCkJqeDhPdG8wUXVGbXRFWUUzc2FXbUE5TFNIb2tNbldSbjZ6M2FPa3F1VlZsemwxaDB5ZHcyRGYrbjdtdm9DNVcKdDZObFVlMDdxeFMvVEZFRDZGK0tCWnZ1aW02Yzc3OW8rc2phQytOQ3lkQVhGSnkzU3VDdmt5Y2hWU2ExWkMrTgo4ZittUUFXRkJWektCeGxjQ3hNb1RGaC93cVh2UmRwZzA2NWxZWjFUZzNUQ3J2SmN3aGJ0a2o2RVBuTmdpTHgyCjlDelAwSDE5MDdoZTBaRVNFT25OM2NvbDQ5WHRtUysrZFlGTEpQbEZScFRKS1NGVG5DWkZxaE1YNU9mTmVPSTUKd1NzU25xYWVHOFhtRHRreDJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==

# SwissSign Gold CA -G2 Certificate (Root Cert for "mobileid.swisscom.com")
Schnittstellen__MobileIdClient__ServerTrust__TrustStore__0=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ1akNDQTZLZ0F3SUJBZ0lKQUx0QUhFUDFYayt3TUEwR0NTcUdTSWIzRFFFQkJRVUFNRVV4Q3pBSkJnTlYKQkFZVEFrTklNUlV3RXdZRFZRUUtFd3hUZDJsemMxTnBaMjRnUVVjeEh6QWRCZ05WQkFNVEZsTjNhWE56VTJsbgpiaUJIYjJ4a0lFTkJJQzBnUnpJd0hoY05NRFl4TURJMU1EZ3pNRE0xV2hjTk16WXhNREkxTURnek1ETTFXakJGCk1Rc3dDUVlEVlFRR0V3SkRTREVWTUJNR0ExVUVDaE1NVTNkcGMzTlRhV2R1SUVGSE1SOHdIUVlEVlFRREV4WlQKZDJsemMxTnBaMjRnUjI5c1pDQkRRU0F0SUVjeU1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQwpDZ0tDQWdFQXIrVHVmb3NrRGhKdXFWQXRGa1E3a3BKY3lyaGRoSkpDRXlxOFpWZUNRRDVYSk0xUWl5VXF0Mi84Cjc2TFF3QjhDSkVvVGxvOGpFK1lvV0FDalI4Y0dwNFFqSzd1OWxpdC9WY3lMd1ZjZkRtSmxEOTA5Vm9wejJxNSsKYmJxQkhINUNqQ0ExMlVOTmhQcUUyMUlzOHc0bmR3dHJ2eEV2Y25pZkx0Zys1aGczV2lweStkcGlrSktWeWgrYwo2Yk04Szh2ekFSTy9Xcy9CdFFwZ3ZkMjFtV1JUdUtDV3MyL2lKbmVSak9CaUVBS2ZOQStrMVpJelVkNitqYnFFCmVtQThhdHVmSyt6ZTNnRS9iazNsVUliTHRLL3RSRURGeWxxTTJ0SXJmS2p1dnFibENxb09wZDhGVXJkVnh5SmQKTW1xWGwyTVQyOG5iZVRaN2hUcEt4VktKK1NUbm5YZXBndjlWSEtWeGFTdlJBaVR5c3liVWE5b0VWZVhCQ3NkdApNRGVRS3VTZUZETmVGaGRWeFZ1MXl6U0prdkdkSm8raEI5VEdzbmhRMnd3TUMzd0xqRUhYdWVuZGpJajNvMDJ5Ck1zellGOXJOdDg1bW5kVDlYdis5bHo0cGRlZCtwMkpZcnlVMHBVSEhQYndOVU1vREF3OElXaCtWYzNoaXY2OXkKRkdrT3BlVUREbmlPSmloQzhBY0xZaUFRWnpsRytxa0R6QVE0ZW1idklJTzFqRXBXanBFQS9JNWNndDZJb01QaQphRzU5amU4ODNXWDBYYXhSN3lTQXJxcFdsMi81clgzYVlUK1lkenlsa2JZY2pDYmFaYUlKYmNIaVZPTzV5a3hNCmdJOTNlMkNhSHQrMjhrZ2VEcnBPVkcyWTRPR2lHcUozVU0vRVk1THNSeG1kNitacnpzRUNBd0VBQWFPQnJEQ0IKcVRBT0JnTlZIUThCQWY4RUJBTUNBUVl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV3lWNwpscVJsVVg2NE9mUEFlR1plNkRybjhPNHdId1lEVlIwakJCZ3dGb0FVV3lWN2xxUmxVWDY0T2ZQQWVHWmU2RHJuCjhPNHdSZ1lEVlIwZ0JEOHdQVEE3QmdsZ2hYUUJXUUVDQVFFd0xqQXNCZ2dyQmdFRkJRY0NBUllnYUhSMGNEb3YKTDNKbGNHOXphWFJ2Y25rdWMzZHBjM056YVdkdUxtTnZiUzh3RFFZSktvWklodmNOQVFFRkJRQURnZ0lCQUNlNgo0NVI4OGE3QTNoZm01ZGpWOVZTd2cvUzd6VjRGZTArZmRXYXZQT2hXZnZ4eWVEZ0QyU3RpR3dDNStPbGd6Y3pPClVZckhVREZ1NFVwK0dDOXBXYlk5WklFcjQ0T0U1aUtIam4zZzdnS1pZYmdlOUxncmlCSVdoTUl4a3ppV01hYTUKTzFNL3d5U1RWbHRwa3V6RndiczRBT1BzRjZtNDNNZDhBWU9mTWtlNlVpSTBIVEo2Q1ZhbmZDVTJxVDFMMnNDQwpid3E3RXNpSFN5Y1IrUjR0eDVNL250dGZKbXRTMlM2SzhSVEdSSTBWcWJlL3ZkNm1HdTZ1TGZ0SWR4Zit1K3l2CkdQVXFVZkE1aEplVmJHNGJ3eXZFZEdCNUpiQUtKOS9mWHRJNXowVjlRa3Zmc3l3ZXhjWmR5bFU2b0p4cG1vL2EKNzdLd1BKK0hiQklyWlhBVlVqRWFKTTl2TVNOUUg0eFBqeVBEZEVGakhGV29GTjArNEZGUXovRWJNRllPa3JDQwpoZGlEeXlKa3ZDMjRKZFZVb3JnRzZxMlNwQ1Nnd1lhMVNoTnFSODh1QzFhVlZNdk9tdHRxdEtheTIwRUloaWQzCjkycWdRbXdMT003WGRWQXlrc0xmS3pBaVNORFZRVGdsWGFUcFhaL0dsSFhRUmYwd2wwT1BrS3NLeDRaellFcHAKTGQ2bGVOY0cybXFlU3o1M09pQVRJZ0hRdjJpZVkyQnJOVTBMYmJxaFBjQ1Q0SDhqczFXdGNpVk9Sdm5TRnUrdwpaTUVCbnVuS29HcVlEcy9ZWVBJdlNiamtRdUU0TlJiMHlHNVA5NEZXNkxxanZpT3ZydjF2QStBQ096QjIraHR0ClFjOEJzZW00eVdiMDJ5YnpPcVIwOGtra1c4bXcwRmZCK2o1NjRaZkoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
